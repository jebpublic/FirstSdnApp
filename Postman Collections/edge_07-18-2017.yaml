swagger: '2.0'
info:
  version: '1.0'
  title: edge 07-18-2017
  description: 'TODO: Add Description'
  contact: {}
host: dev-edge-backend.unomiclabs.com:3002
basePath: /
securityDefinitions: {}
schemes:
- http
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/login:
    post:
      description: 'TODO: Add Description'
      summary: login
      tags:
      - auth
      operationId: AuthLoginPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/loginrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/controller/Skw5s0wTW/scope:
    put:
      description: 'TODO: Add Description'
      summary: add vnet scope
      tags:
      - controller
      operationId: ApiControllerSkw5s0wTWScopePut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/addvnetscoperequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/controller/:
    post:
      description: 'TODO: Add Description'
      summary: create new Copa Connector
      tags:
      - controller
      operationId: ApiControllerPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/createnewCopaConnectorRequest'
      responses:
        200:
          description: ''
          headers: {}
  /device/register/macAddress:
    post:
      description: 'TODO: Add Description'
      summary: preregister by mac
      tags:
      - device
      operationId: DeviceRegisterMacAddressPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/preregisterbymacrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/device/<deviceID>:
    delete:
      description: 'TODO: Add Description'
      summary: delete device
      tags:
      - device
      operationId: ApiDeviceDeviceIDDelete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/device/<userID>:
    get:
      description: 'TODO: Add Description'
      summary: get device by id
      tags:
      - device
      operationId: ApiDeviceUserIDGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/device/1:
    put:
      description: 'TODO: Add Description'
      summary: update device by id
      tags:
      - device
      operationId: ApiDevice1Put
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/updatedevicebyidrequest'
      responses:
        200:
          description: ''
          headers: {}
  /group:
    post:
      description: 'TODO: Add Description'
      summary: create new group
      tags:
      - group
      operationId: GroupPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/createnewgrouprequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/group:
    delete:
      description: 'TODO: Add Description'
      summary: delete group
      tags:
      - group
      operationId: ApiGroupDelete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
    get:
      description: 'TODO: Add Description'
      summary: '[future] get groups'
      tags:
      - group
      operationId: ApiGroupGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/group/70001:
    get:
      description: 'TODO: Add Description'
      summary: get group by id
      tags:
      - group
      operationId: ApiGroup70001Get
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/group/70001/team:
    get:
      description: 'TODO: Add Description'
      summary: get team that admins this group
      tags:
      - group
      operationId: ApiGroup70001TeamGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/group/70001/devices:
    get:
      description: 'TODO: Add Description'
      summary: get devices in a group
      tags:
      - group
      operationId: ApiGroup70001DevicesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/group/<groupID>/score:
    get:
      description: 'TODO: Add Description'
      summary: group score
      tags:
      - group
      operationId: ApiGroupGroupIDScoreGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/group/150/policy:
    get:
      description: 'TODO: Add Description'
      summary: get group policy
      tags:
      - group
      operationId: ApiGroup150PolicyGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /group/151/inviteMember:
    post:
      description: 'TODO: Add Description'
      summary: invite new member
      tags:
      - group
      operationId: Group151InviteMemberPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/invitenewmemberrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/user/<userID>/registeredDevices:
    get:
      description: 'TODO: Add Description'
      summary: '[archive] get user registered devices'
      tags:
      - group
      operationId: ApiUserUserIDRegisteredDevicesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/organization:
    post:
      description: 'TODO: Add Description'
      summary: create new org
      tags:
      - organization
      operationId: ApiOrganizationPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/createneworgrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/organization/79:
    get:
      description: 'TODO: Add Description'
      summary: get org by ID
      tags:
      - organization
      operationId: ApiOrganization79Get
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
    delete:
      description: 'TODO: Add Description'
      summary: '[future] get org by ID'
      tags:
      - organization
      operationId: ApiOrganization79Delete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/organization/79/teams:
    get:
      description: 'TODO: Add Description'
      summary: get org owned teams
      tags:
      - organization
      operationId: ApiOrganization79TeamsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/organization/79/sites:
    get:
      description: 'TODO: Add Description'
      summary: get org owned sites
      tags:
      - organization
      operationId: ApiOrganization79SitesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/organization/<orgID>/orgMembers:
    post:
      description: 'TODO: Add Description'
      summary: invite member to org
      tags:
      - organization
      operationId: ApiOrganizationOrgIDOrgMembersPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/site:
    post:
      description: 'TODO: Add Description'
      summary: create new site
      tags:
      - site
      operationId: ApiSitePost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/createnewsiterequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/site/<siteID>:
    get:
      description: 'TODO: Add Description'
      summary: get site by id
      tags:
      - site
      operationId: ApiSiteSiteIDGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/site/<siteID>/switches:
    get:
      description: 'TODO: Add Description'
      summary: get site switches
      tags:
      - site
      operationId: ApiSiteSiteIDSwitchesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
    post:
      description: 'TODO: Add Description'
      summary: add site switch
      tags:
      - site
      operationId: ApiSiteSiteIDSwitchesPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/addsiteswitchrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/site/105/controller:
    put:
      description: 'TODO: Add Description'
      summary: Change Controller
      tags:
      - site
      operationId: ApiSite105ControllerPut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ChangeControllerRequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/site/31/switches:
    put:
      description: 'TODO: Add Description'
      summary: update site switch
      tags:
      - site
      operationId: ApiSite31SwitchesPut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/updatesiteswitchrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/site/52:
    delete:
      description: 'TODO: Add Description'
      summary: '[future] delete site by id'
      tags:
      - site
      operationId: ApiSite52Delete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/site/:
    get:
      description: 'TODO: Add Description'
      summary: '[future] get sites'
      tags:
      - site
      operationId: ApiSiteGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/:
    post:
      description: 'TODO: Add Description'
      summary: create a team
      tags:
      - teams
      operationId: ApiTeamPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/createateamrequest'
      responses:
        200:
          description: ''
          headers: {}
    get:
      description: 'TODO: Add Description'
      summary: '[future] get all teams'
      tags:
      - teams
      operationId: ApiTeamGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/42:
    get:
      description: 'TODO: Add Description'
      summary: get team by Id
      tags:
      - teams
      operationId: ApiTeam42Get
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/42/devices:
    get:
      description: 'TODO: Add Description'
      summary: get devices admined by a team
      tags:
      - teams
      operationId: ApiTeam42DevicesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/42/groups:
    get:
      description: 'TODO: Add Description'
      summary: get groups/zones admined by a team
      tags:
      - teams
      operationId: ApiTeam42GroupsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/42/sites:
    get:
      description: 'TODO: Add Description'
      summary: get sites admined by team
      tags:
      - teams
      operationId: ApiTeam42SitesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/search:
    post:
      description: 'TODO: Add Description'
      summary: team search
      tags:
      - teams
      operationId: ApiTeamSearchPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/teamsearchrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/team/<teamID>/teamMembers:
    post:
      description: 'TODO: Add Description'
      summary: invite member to team
      tags:
      - teams
      operationId: ApiTeamTeamIDTeamMembersPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: string
      responses:
        200:
          description: ''
          headers: {}
    put:
      description: 'TODO: Add Description'
      summary: update user role for team
      tags:
      - teams
      operationId: ApiTeamTeamIDTeamMembersPut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/team/48:
    delete:
      description: 'TODO: Add Description'
      summary: '[future] delete a team'
      tags:
      - teams
      operationId: ApiTeam48Delete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /api/user:
    post:
      description: 'TODO: Add Description'
      summary: create new user
      tags:
      - user
      operationId: ApiUserPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/createnewuserrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/user/584a1485cb3015983d4f0b16:
    delete:
      description: 'TODO: Add Description'
      summary: delete user by id
      tags:
      - user
      operationId: ApiUser584a1485cb3015983d4f0b16Delete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/10001:
    get:
      description: 'TODO: Add Description'
      summary: get user by id
      tags:
      - user
      operationId: ApiUser10001Get
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/10001/groups:
    get:
      description: 'TODO: Add Description'
      summary: get user groups
      tags:
      - user
      operationId: ApiUser10001GroupsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/10001/teams:
    get:
      description: 'TODO: Add Description'
      summary: get user teams
      tags:
      - user
      operationId: ApiUser10001TeamsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/10001/sites:
    get:
      description: 'TODO: Add Description'
      summary: get user's site
      tags:
      - user
      operationId: ApiUser10001SitesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/10001/organizations:
    get:
      description: 'TODO: Add Description'
      summary: get user's org
      tags:
      - user
      operationId: ApiUser10001OrganizationsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/10001/devices:
    get:
      description: 'TODO: Add Description'
      summary: get user devices
      tags:
      - user
      operationId: ApiUser10001DevicesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/<userID>/updatePassword:
    put:
      description: 'TODO: Add Description'
      summary: update user password
      tags:
      - user
      operationId: ApiUserUserIDUpdatePasswordPut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/<userID>:
    put:
      description: 'TODO: Add Description'
      summary: update user
      tags:
      - user
      operationId: ApiUserUserIDPut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/user/search:
    post:
      description: 'TODO: Add Description'
      summary: user search
      tags:
      - user
      operationId: ApiUserSearchPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/usersearchrequest'
      responses:
        200:
          description: ''
          headers: {}
  /api/user/:
    get:
      description: 'TODO: Add Description'
      summary: '[archive] get users'
      tags:
      - user
      operationId: ApiUserGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /api/ruleTemplate/class/types:
    get:
      description: 'TODO: Add Description'
      summary: get rule template classes
      tags:
      - policy
      operationId: ApiRuleTemplateClassTypesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /version:
    get:
      description: 'TODO: Add Description'
      summary: version
      tags:
      - Misc
      operationId: VersionGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
definitions:
  loginrequest:
    title: loginrequest
    example:
      username: jeb@unomicedge.com
      password: unomicIs#1
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
    - username
    - password
  addvnetscoperequest:
    title: addvnetscoperequest
    example:
      vnet:
      - VmwareOvsOnTeamViewer
      - VmwareOvsS2OnTeamViewer
    type: object
    properties:
      vnet:
        type: array
        items:
          type: string
    required:
    - vnet
  createnewCopaConnectorRequest:
    title: createnewCopaConnectorRequest
    example:
      controllerInfo:
        CONTROLLER_IP: 172.20.0.5
        CONTROLLER_PASSWORD: admin
        CONTROLLER_USERNAME: Administrator
        CONTROLLER_PORT: 8080
        _id: local_computer
    type: object
    properties:
      controllerInfo:
        $ref: '#/definitions/ControllerInfo'
    required:
    - controllerInfo
  ControllerInfo:
    title: ControllerInfo
    example:
      CONTROLLER_IP: 172.20.0.5
      CONTROLLER_PASSWORD: admin
      CONTROLLER_USERNAME: Administrator
      CONTROLLER_PORT: 8080
      _id: local_computer
    type: object
    properties:
      CONTROLLER_IP:
        type: string
      CONTROLLER_PASSWORD:
        type: string
      CONTROLLER_USERNAME:
        type: string
      CONTROLLER_PORT:
        type: string
      _id:
        type: string
    required:
    - CONTROLLER_IP
    - CONTROLLER_PASSWORD
    - CONTROLLER_USERNAME
    - CONTROLLER_PORT
    - _id
  preregisterbymacrequest:
    title: preregisterbymacrequest
    example:
      macAddress: 00:0C:29:18:3F:3F
      name: switch1Devices
      deviceType: VMWare_VM
    type: object
    properties:
      macAddress:
        type: string
      name:
        type: string
      deviceType:
        type: string
    required:
    - macAddress
    - name
    - deviceType
  updatedevicebyidrequest:
    title: updatedevicebyidrequest
    example:
      id: 1
      name: raspberry pi
      deviceType: laptop
      activeGroupID: 1
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      deviceType:
        type: string
      activeGroupID:
        type: integer
        format: int32
    required:
    - id
    - name
    - deviceType
    - activeGroupID
  createnewgrouprequest:
    title: createnewgrouprequest
    example:
      name: test zone for team 42
      teamID: 42
    type: object
    properties:
      name:
        type: string
      teamID:
        type: string
    required:
    - name
    - teamID
  invitenewmemberrequest:
    title: invitenewmemberrequest
    example:
      userID: michael@unomicedge.com
    type: object
    properties:
      userID:
        type: string
    required:
    - userID
  DeleteamemberfromthegroupRequest:
    title: DeleteamemberfromthegroupRequest
    example:
      userID: michael@unomicedge.com
    type: object
    properties:
      userID:
        type: string
    required:
    - userID
  createneworgrequest:
    title: createneworgrequest
    example:
      name: test Org
      orgAdminID: 10001
      email: emailme@me.com
      phone: 1234567890
      location:
        city: my city
        zip: 12345
        state: CA
        country: US
    type: object
    properties:
      name:
        type: string
      orgAdminID:
        type: integer
        format: int32
      email:
        type: string
      phone:
        type: string
      location:
        $ref: '#/definitions/Location'
    required:
    - name
    - orgAdminID
    - email
    - phone
    - location
  Location:
    title: Location
    example:
      city: my city
      zip: 12345
      state: CA
      country: US
    type: object
    properties:
      city:
        type: string
      zip:
        type: string
      state:
        type: string
      country:
        type: string
    required:
    - city
    - zip
    - state
    - country
  createnewsiterequest:
    title: createnewsiterequest
    example:
      siteName: the test1 -delme
      teamID: 42
      orgID: 75
      createController: false
      location:
        addressLine1: 1230 alive drive
        addressLine2: 
        city: my city
        zip: 12345
        state: CA
        country: US
    type: object
    properties:
      siteName:
        type: string
      teamID:
        type: integer
        format: int32
      orgID:
        type: integer
        format: int32
      createController:
        type: boolean
      location:
        $ref: '#/definitions/Location1'
    required:
    - siteName
    - teamID
    - orgID
    - createController
    - location
  Location1:
    title: Location1
    example:
      addressLine1: 1230 alive drive
      addressLine2: 
      city: my city
      zip: 12345
      state: CA
      country: US
    type: object
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      city:
        type: string
      zip:
        type: string
      state:
        type: string
      country:
        type: string
    required:
    - addressLine1
    - addressLine2
    - city
    - zip
    - state
    - country
  ChangeControllerRequest:
    title: ChangeControllerRequest
    example:
      controllerID: Skw5s0wTW
    type: object
    properties:
      controllerID:
        type: string
    required:
    - controllerID
  addsiteswitchrequest:
    title: addsiteswitchrequest
    example:
      switchConfig:
        name: test switch
        dpid: test dpid
        macAddress: 11:22:33:44:55:66
        ipAddress: 1.2.3.4
        gatewayIp: 11.12.13.14
        gatewayMac: 01.02.03.04.05.06
        unmanagedPorts: []
        managedPorts: []
    type: object
    properties:
      switchConfig:
        $ref: '#/definitions/SwitchConfig'
    required:
    - switchConfig
  SwitchConfig:
    title: SwitchConfig
    example:
      name: test switch
      dpid: test dpid
      macAddress: 11:22:33:44:55:66
      ipAddress: 1.2.3.4
      gatewayIp: 11.12.13.14
      gatewayMac: 01.02.03.04.05.06
      unmanagedPorts: []
      managedPorts: []
    type: object
    properties:
      name:
        type: string
      dpid:
        type: string
      macAddress:
        type: string
      ipAddress:
        type: string
      gatewayIp:
        type: string
      gatewayMac:
        type: string
      unmanagedPorts:
        type: array
        items:
          type: string
      managedPorts:
        type: array
        items:
          type: string
    required:
    - name
    - dpid
    - macAddress
    - ipAddress
    - gatewayIp
    - gatewayMac
    - unmanagedPorts
    - managedPorts
  updatesiteswitchrequest:
    title: updatesiteswitchrequest
    example:
      switchConfig:
        name: test switch
        dpid: test dpid
        macAddress: 11:22:33:44:55:66
        ipAddress: 1.2.3.4
        gatewayIp: 11.12.13.14
        gatewayMac: 01.02.03.04.05.06
        unmanagedPorts: []
        managedPorts: []
    type: object
    properties:
      switchConfig:
        $ref: '#/definitions/SwitchConfig'
    required:
    - switchConfig
  createateamrequest:
    title: createateamrequest
    example:
      userID: 10001
      name: testTeamToBeDeleted
      description: A team that will be used to see if delete REST endpoint works.
      personal: false
      orgID: 75
    type: object
    properties:
      userID:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      personal:
        type: boolean
      orgID:
        type: integer
        format: int32
    required:
    - userID
    - name
    - description
    - personal
    - orgID
  teamsearchrequest:
    title: teamsearchrequest
    example:
      search:
        personal: true
    type: object
    properties:
      search:
        $ref: '#/definitions/Search'
    required:
    - search
  Search:
    title: Search
    example:
      personal: true
    type: object
    properties:
      personal:
        type: boolean
    required:
    - personal
  createnewuserrequest:
    title: createnewuserrequest
    example:
      username: chris@home.com
      password: password
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
    - username
    - password
  usersearchrequest:
    title: usersearchrequest
    example:
      search:
        firstName: chris
    type: object
    properties:
      search:
        $ref: '#/definitions/Search1'
    required:
    - search
  Search1:
    title: Search1
    example:
      firstName: chris
    type: object
    properties:
      firstName:
        type: string
    required:
    - firstName
tags:
- name: auth
- name: controller
- name: device
- name: group
- name: organization
- name: site
- name: teams
  description: team api calls
- name: user
- name: policy
- name: Misc
  description: ''
